/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.acceptanceTest.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.mydsl.acceptanceTest.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class AcceptanceTestFactoryImpl extends EFactoryImpl implements AcceptanceTestFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static AcceptanceTestFactory init()
  {
    try
    {
      AcceptanceTestFactory theAcceptanceTestFactory = (AcceptanceTestFactory)EPackage.Registry.INSTANCE.getEFactory(AcceptanceTestPackage.eNS_URI);
      if (theAcceptanceTestFactory != null)
      {
        return theAcceptanceTestFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new AcceptanceTestFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AcceptanceTestFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case AcceptanceTestPackage.ACCEPTANCE_TEST: return createAcceptanceTest();
      case AcceptanceTestPackage.ITEM: return createItem();
      case AcceptanceTestPackage.ACTION: return createAction();
      case AcceptanceTestPackage.CASE: return createCase();
      case AcceptanceTestPackage.CONDITION: return createCondition();
      case AcceptanceTestPackage.OUTCOME: return createOutcome();
      case AcceptanceTestPackage.TEST_CASE: return createTestCase();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AcceptanceTest createAcceptanceTest()
  {
    AcceptanceTestImpl acceptanceTest = new AcceptanceTestImpl();
    return acceptanceTest;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Item createItem()
  {
    ItemImpl item = new ItemImpl();
    return item;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Action createAction()
  {
    ActionImpl action = new ActionImpl();
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Case createCase()
  {
    CaseImpl case_ = new CaseImpl();
    return case_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Condition createCondition()
  {
    ConditionImpl condition = new ConditionImpl();
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Outcome createOutcome()
  {
    OutcomeImpl outcome = new OutcomeImpl();
    return outcome;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TestCase createTestCase()
  {
    TestCaseImpl testCase = new TestCaseImpl();
    return testCase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AcceptanceTestPackage getAcceptanceTestPackage()
  {
    return (AcceptanceTestPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static AcceptanceTestPackage getPackage()
  {
    return AcceptanceTestPackage.eINSTANCE;
  }

} //AcceptanceTestFactoryImpl
